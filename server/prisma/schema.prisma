// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// enum role 
enum Role {
  admin
  customer
}

model User {
  id         Int      @id @default(autoincrement())
  name       String
  email      String   @unique
  password   String
  avatar     String
  url_avatar String
  role       Role     @default(customer)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

// genre
model Genre {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  movies Movie[]
}

// theater
model Theater {
  id        Int      @id @default(autoincrement())
  name      String
  city      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  movies Movie[]
}

// movie 
model Movie {
  id            Int     @id @default(autoincrement())
  title         String
  description   String
  thumbnail     String
  url_thumbnail String
  price         Int
  available     Boolean
  bonus         String

  genreId   Int // foreign key
  theaterId Int // foreign key

  // realtion genre many to one
  genre Genre @relation(fields: [genreId], references: [id], onDelete: Cascade)

  // realtion theater many to one
  theater Theater @relation(fields: [theaterId], references: [id], onDelete: Cascade)
}
